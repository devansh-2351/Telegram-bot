[metadata]
license_file = LICENSE.dual

[build_sphinx]
source-dir = docs/source
build-dir  = docs/build
all_files  = 1

[upload_sphinx]
upload-dir = docs/build/html

[flake8]
max-line-length = 99
ignore = W503, W605
extend-ignore = E203
exclude = setup.py, setup-raw.py docs/source/conf.py, telegram/vendor

[pylint]
ignore=vendor

[pylint.message-control]
disable = C0330,R0801,R0913,R0904,R0903,R0902,W0511,C0116,C0115,W0703,R0914,R0914,C0302,R0912,R0915,R0401

[tool:pytest]
testpaths = tests
addopts = --no-success-flaky-report -rsxX
filterwarnings =
    error
    ignore::DeprecationWarning
;    Unfortunately due to https://github.com/pytest-dev/pytest/issues/8343 we can't have this here
;    and instead do a trick directly in tests/conftest.py
;    ignore::telegram.utils.deprecate.TelegramDeprecationWarning

[coverage:run]
branch = True
source = telegram
parallel = True
concurrency = thread, multiprocessing
omit =
    tests/
    telegram/__main__.py
    telegram/vendor/*

[coverage:report]
exclude_lines =
    pragma: no cover
    @overload
    if TYPE_CHECKING:

[mypy]
warn_unused_ignores = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
show_error_codes = True

[mypy-telegram.vendor.*]
ignore_errors = True

# Disable strict optional for telegram objects with class methods
# We don't want to clutter the code with 'if self.bot is None: raise RuntimeError()'
[mypy-telegram.callbackquery,telegram.chat,telegram.message,telegram.user,telegram.files.*,telegram.inline.inlinequery,telegram.payment.precheckoutquery,telegram.payment.shippingquery,telegram.passport.passportdata,telegram.passport.credentials,telegram.passport.passportfile,telegram.ext.filters]
strict_optional = False

# type hinting for asyncio in webhookhandler is a bit tricky because it depends on the OS
[mypy-telegram.ext.utils.webhookhandler]
warn_unused_ignores = False

[mypy-urllib3.*]
ignore_missing_imports = True

[mypy-apscheduler.*]
ignore_missing_imports = True
